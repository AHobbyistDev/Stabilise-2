Project Start to 05/12/13 (Specific dates unknown/can't be bothered to dig up)
	- Simple tile classes
	- Simple rendering
	- Simple menu
	- Simple slices
	- Simple superimposed sine wave worldgen
	- Simple entity logic
	- Log
06/12/13
	- Added NBT
	- Improved menu button focus management
14/12/13
	- Fixed an annoying error regarding binding textures and sprites not working
16/12/13
	- Added TCPConnection.java and basic packets
17/12/13
	- Beginning migration of worlds to saved worlds
	- Beginning migration of game to client-server architecture (not really - just creating relevant classes in advance)
18/12/13
	- Term 4/1 finished; can finally begin spending dedicated time coding
19/12/13
	- Added TextBox.java
	- Added the ability to create and select worlds
20/12/13
	- Added support for fonts with lowercase letters
	- Added world creation via the main menu - saves world info file
	- ButtonGrid.java is now ComponentGrid.java
	- [60 tps concerns, network flooding, graphical interpolation]
21/12/13
	- Added slice saving and loading
	- Initial implementation of regions
	- Began shift to networking architecture (all code is now broken - hooray!)
22/12/13
	- The server and client can now be set up and both can send packets to the other
	- Made first successful client-server interaction
23/12/13
	- The worlds are now ordered based on the most recent time they were used.
	- Game ported over to (probably unstable) client-server architecture
		- Worlds can now run on 'servers' (WOOHOO!)
	- Bug where regions aren't unloaded because slices are still marked as loaded for some reason
24/12/13
	- Fixed regions not unloading (turned out to be buffered slices being re-requested even though they're technically loaded)
	- Removed secondary main thread and client thread - they were just redundant
25/12/13
	- Refactored accessors for better immutability practices and whatnot
	- Potentially ensured the list of connections for a server remains concurrent
27/12/13
	- Rewrote the log to make it instance-based.
06/01/14
	- Added shapes which use SAT (separating axis theorem) collision detection
07/01/14
	- Beginning rewrite of entity physics - extremely agitated by difficulty in doing so
19/01/14
	- Entity physics complete (WOO!) (still a possibility for future breakages, though)
20/01/14
	- Added Animation.java
21/01/14
	- Added MovementController.java
	- Changed texture groups/owners to generic marker objects
25/01/14
	- Initial framework for concurrent world generation
01/02/14
	- Added generalised VertexBufferObject classes (modularised/neatened VBO management stuff)
02/02/14
	- Added coloured rectangles (for backgrounds and stuff)
07/02/14
	- Worlds now generate on a separate thread
08/02/14
	- Added the ability for structures to generate across region boundaries
		- Adding structures to already-generated regions currently doesn't work (sometimes... I think)
13/03/14
	- Can add other entities to the world (client-only, very crude)
		- Still todo:
			- Sync them between the client and the server
			- Have them save to the world
			- Better methods for referencing and managing them
14/03/14
	- Added hitboxes
	- Added projectiles
15/03/14
	- Added arrows, which the player can fire by pressing F
	- Added a basic test enemy with a simple AI, which the player can summon by pressing G
	- Added item entities, which are dropped by the test enemy when killed and picked up by the player
16/03/14
	- Fixed arrow rendering problems, specifically to do with it being flipped horizontally
26/03/14
	- Added ConfigFile.java
27/03/14
	- Added player inventory
	- Added an item hotbar GUI
29/03/14
	- Disabled client-server architecture
	- Added multithreaded world saving
01/04/14
	- Added SubMenuBasedMenu.java - that is, menus composed of sub-menus that are capable of being reused in different menus (e.g. game options)
	- Added an in-game pause menu
	- Added support for different colour alpha values
02/04/14
	- Added shader support
04/04/14
	- Found a bug where having the item hotbar filled messes with the font texture
05/04/14
	- Fixed the texture breaking bug - it was interference from non-textured shapes and glDisable(GL_TEXTURE_2D). This fixing involves lots of enabling and disabling of GL_TEXTURE_2D. May impact performance.
08/04/14
	- Refactored fonts
		- Added FontStyle.java
10/04/14
	- Added a tint/alpha shader for sprites
		- Annoying texture derp bug with the shader, can't pin down exact cause
11/04/14
	- Added mass dummy enemy summoning by pressing T
	- Added arrow burst by pressing R
	- Tidied up entity and hitbox management - entities are added to and removed from the world at the end of each tick
15/04/14
	- Improved rendering performance for spritesheets and fonts
18/04/14
	- Mobs flash white when they take damage, and turn red when they die
	- Added Particle.java
		- Added a damage indicator particle
19/04/14
	- Fixed the bug which caused shaders to mess up textures
	- Added hit knockback
20/04/14
	- Added SpriteBatch.java
21/04/14
	- Added game settings (Settings.java)
23/04/14
	- Remade main menu
		- Select world screen is now much more fancy
			- Yet to reimplement world creation
	- Fixed a highly annoying bug where unloading a VBO crashes the game if it is still attached to a shader
11/05/14
	- Added a basic player model consisting of a spritesheet of poses
	- Improved mob states - a mob's state can now determine how it is capable of acting
		- The player model renders poses based on the player's state and how long they have remained in that state
16/05/14
	- Added MobController architecture
17/05/14
	- Updated player animations/poses
		- Slides
		- 3 standard attacks, 3 special attacks (side, up, down)
			- Attacks currently don't do anything gameplay-wise
18/05/14
	- Added hitboxes for the 3 standard attacks
27/04/14
	- Added aerial attacks and special moves
		- No hitboxes yet
28/05/14
	- Enemies no longer drop items
	- Item hotbar is no longer displayed as a part of the HUD
	- Added health, stamina and mana bars to the HUD
	- Added fireballs
		- Fireballs apply a fire effect to mobs they hit, which deals damage over time
	- Added fire particles
	- Added smoke particles which appear when a mob dies
29/05/14
	- Player health, stamina and mana now regen over time
	- Shooting fireballs consumes mana, and they cannot be shot without sufficient mana
	- Enemies now randomly spawn in the world
30/05/14
	- Added hitboxes for all attacks and special attacks
02/06/14
	- Added the ability to delete worlds
06/06/14
	- Reimplemented the ability to create worlds
		- Worlds with a negative seed will, for now at least, be flatland, while positive seeds produce hilly worlds
09/06/14
	- vSync is now turned on by default
	- The game now pauses when the window loses focus
	- The game now returns to the main menu if it encounters an exception during a game tick, as opposed to simply crashing
16/06/14
	- Added the 'how to play' menu
17/06/14
	- Changed the map of regions in GameWorld from HashMap to ConcurrentHashMap to prevent ConcurrentModificationExceptions being thrown when it is accessed by the world generator thread (hopefully prevents some in-game crashes)
20/06/14
	- Attempted to make region transfer between threads safer and less error-prone (main thread now grabs generated regions once generator thread stops)
	- The fireball cast by the aerial down special now destroys non-blast resistant tiles within a small radius
	- Grass now spreads to exposed dirt tiles
04/07/14
	- Perlin noise world generation
		- The terrain curve is now completely random, never repeats, and looks nice
		- Cave generation which uses 2D perlin noise
	- Improved synchronisation and resource exchange between the main, loader and worldgen threads
		- Regions now have an 'unsavedChanges' flag which allows the main thread to take control of most world saving
		- Modifications to the world (e.g. destroyed terrain) are now saved
07/07/14
	- Cave generation now uses 2D simplex noise
	- Added zoom
	- Menus ignore the mouse cursor if the user is using keyboard navigation
09/07/14
	- Improved region/slice/tile referencing
	- Added tile entities
		- Added a chest tile entity, which stores items
		- Infrastructure is still crude and incomplete
			- Tile entities currently cause the game to crash when a world is generated with them
			- Tile entities cause the game to crash when they are destroyed
10/07/14
	- Tile entities no longer cause crashes
	- Chests drop their contents into the world when they are destroyed
21/07/14
	- Added the ability to place tiles using the mouse
25/07/14
	- Improved entity/particle rendering
	- Added tile items (though they don't render properly yet)
06/08/14
	- Improved the speed of collision detection by making shapes precompute their projection axes and projections rather than do so at every collision
24/08/14
	- Tiles and Items are now backed by a registry instead of an array
28/08/14
	- Added the SoundManager (no sounds actually in use yet)
14/09/14
	- Added translational interpolation for MenuItems
23/09/14
	- Added DelegableTask
		- The game now loads resources during a starting splash screen on a separate thread
03/10/14
	- The world now remembers the player's last location and spawns them there
05/10/14
	- Moved the WorldGenerator/Loader architecture to use a thread pool, I/O and gen operations are now much faster
22/11/14
	- Added Profiler.java
10/12/14
	- Projection precomputation for shapes in util.shape is now an optional optimisation
14/12/14
	- Ported to libGDX. Everything is broken!
07/01/15	
	- Added InstantiationRegistry to create entities, tile entities, packets, etc.
10/01/15
	- Porting World architecture over to something more extensive and usable for all world types (e.g. singleplayer, server, client to a server)
27/01/15
	- The game is now runnable to an extent. Menu architecture is still broken, rendering is crude and incomplete, and only one sample world can be run.
11/02/15
	- Preparing architecture to add multiple dimensions.
12/02/15
	- Added NBTExporter to automatically convert objects to and from NBT
20/02/15
	- Improving networking architecture.
17/04/15
	- Fixed broken SAT collisions!
20/04/15
	- Added World.WorldBuilder.
27/04/15
	- Added AbstractWorld.ParticleManager and particle pooling.
29/04/15
	- Even more improvement of networking architecture
		- Protocol synchronisation between peers, ping packets
12/05/15
	- Beginning refactoring of region state, WorldGenerator, WorldLoader, and HostWorld.
16/05/15
	- Added RegionCache.
19/05/15
	- WorldProvider -> Multiverse
11/06/15
	- Debug key to toggle rendering hitbox outlines in-game
13/06/15
	- RegionCache is now RegionStore and is now in charge of managing all regions.
21/09/15
	- Game now uses the updated floatarray hitboxes.
28/09/15
	- Added FragList and improved general collections classes
20/10/15
	- Replaced util.concurrent.Task with the util.concurrent.task framework
06/11/15
	- Extremely basic lighting implementation
11/11/15
	- Added tile brush with variable radius for mass tile devastation!
15/11/15
	- Refactored entities to be component-based
05/12/15
	- Refactored NBT
28/12/15
	- Refactored util.concurrent.task framework
14/12/16
	- Gave dimensions the ability to properly register their desired generators.
16/03/18
	- Added Position class and refactored game to use it instead of double/int pairs.



